//!!用Intellij idea 运行测试，启动gradle的jvm参数加上-Dfile.encoding=UTF-8 不乱码
buildscript {
    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
        maven { url "https://plugins.gradle.org/m2/"}
    }
    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:2.0.1'
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath "org.grails.plugins:hibernate5:${gormVersion-".RELEASE"}"
        classpath "com.bertramlabs.plugins:asset-pipeline-gradle:2.14.2"
    }
}
allprojects{
    apply plugin:'groovy'
    repositories {
        mavenLocal()
        jcenter()
        mavenCentral()
    }
    dependencies{
        compile 'org.codehaus.groovy:groovy-all:+'
        
        //日志
        compile 'org.apache.logging.log4j:log4j-api:+'
        compile 'org.apache.logging.log4j:log4j-core:+'
        compile 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:+'
        compile 'com.fasterxml.jackson.core:jackson-databind:+'
        
        testCompile 'org.spockframework:spock-core:+'
    }
//    compileGroovy{
//        options.encoding='UTF-8'
//    }
//    compileTestGroovy{
//        options.encoding='UTF-8'
//    }
//    compileJava{
//        options.encoding='UTF-8'
//    }
//    compileTestJava{
//        options.encoding='UTF-8'
//    }
}
dependencies{
    compile project(':Core')
    compile project(':FileClient')
    compile project(':FileServer')
    compile project(':StorageNode')
}
sourceSets{
    test{
        groovy{
            srcDirs=['说明书与测试']
        }
        resources{
            srcDirs=['cfg']
        }
    }
}
wrapper{
    gradleVersion = '4.0'
}
//compileTestGroovy {
//    source = fileTree(dir: projectDir).matching { include '*.groovy' }
//}

subprojects{
    apply plugin:'com.github.johnrengelman.shadow'
    apply plugin:'application'
    sourceSets{
        main{
            groovy{
                srcDirs=['src']
            }
            resources{
                srcDirs=['cfg']
            }
        }
        test{
            groovy{
                srcDirs=['test']
            }
            /*resources{
                srcDirs=['test/res']
            }*/
        }
    }
    mainClassName=it.name
    shadowJar{
//        doLast{
//            copy{
//                from 'build/libs/作业2-all.jar'
//                into projectDir
//                rename({'homework2.jar'})
//            }
//        }
    }
}
project(':Core'){
    dependencies{
        compile 'io.netty:netty-all:4.1.12.Final'
        compile 'net.lingala.zip4j:zip4j:1.3.2' //zip加密压缩
    }
}
project(':StorageNode'){
    dependencies{
        compile project(':Core')
    }
}
project(':FileServer'){
    dependencies{
        compile project(':StorageNode')
    }
}
project(':FileClient'){
    dependencies{
        compile project(':FileServer')
    }
}
project(':Monitor'){
    apply plugin:'org.grails.grails-web'
    apply plugin:'org.grails.grails-gsp'
    mainClassName='hm.Application'
    repositories {
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        compile rootProject.project(':FileServer')
        
        profile "org.grails.profiles:web"
        
        compile 'org.springframework.boot:spring-boot-starter-logging'
        compile 'org.springframework.boot:spring-boot-autoconfigure'
        compile 'org.springframework.boot:spring-boot-starter-actuator'
        compile 'org.springframework.boot:spring-boot-starter-tomcat'
        
        compile 'org.grails:grails-core'
        compile "org.grails:grails-dependencies"
        compile 'org.grails:grails-plugin-url-mappings'
        compile "org.grails:grails-plugin-gsp"
        compile 'org.grails:grails-plugin-codecs'
        compile 'org.grails:grails-plugin-interceptors'
        compile 'org.grails:grails-plugin-services'
        compile 'org.grails:grails-plugin-datasource'
        compile 'org.grails:grails-plugin-databinding'
        compile 'org.grails:grails-web-boot'
        compile 'org.grails:grails-logging'
        
        compile 'org.grails.plugins:gsp'
        compile 'org.grails.plugins:cache'
        compile 'org.grails.plugins:async'
        compile 'org.grails.plugins:events'
        compile 'org.grails.plugins:hibernate5'
        
        compile 'org.hibernate:hibernate-core:5.1.5.Final'
        compile 'com.h2database:h2'
        console 'org.grails:grails-console'
        
        runtime 'org.apache.tomcat:tomcat-jdbc'
        runtime "org.glassfish.web:el-impl:2.1.2-b03"
        runtime "com.bertramlabs.plugins:asset-pipeline-grails:2.14.2"
        
        testCompile 'org.grails:grails-plugin-testing'
        testCompile 'org.grails.plugins:geb'
        testRuntime 'org.seleniumhq.selenium:selenium-htmlunit-driver:2.47.1'
        testRuntime 'net.sourceforge.htmlunit:htmlunit:2.18'
    }
    
    springBoot {
        // Enable the creation of a fully
        // executable archive file.
        executable = true
        mainClass='hm.Application'
    }
    
    run{
        jvmArgs('-Dspring.output.ansi.enabled=always')
        jvmArgs('-Dclient.encoding.override=UTF-8')
        jvmArgs('-Dfile.encoding=UTF-8')
    }
    
}
